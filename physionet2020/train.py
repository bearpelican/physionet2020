# AUTOGENERATED! DO NOT EDIT! File to edit: 02_train.ipynb (unless otherwise specified).

__all__ = ['pad_batch', 'OpenEEG']

# Cell
from fastai2.basics import *
from fastai2.vision.all import *
from .preprocess import *

# Cell
def pad_batch(x, pad_to=3000, value=-1):
    bs_pad = pad_to-x.shape[-1]
    pad = [0]*len(x.shape)
    pad[-1] = bs_pad
    return F.pad(x, pad=pad, value=value)[:,:pad_to]

class OpenEEG():
    def __init__(self, df, path, max_ts=4000):
        self.df = df
        self.path = path
        self.max_ts = max_ts
    def x(self, pid):
        p = self.path/f'{pid}.npy'
        val = np.load(str(p)).astype(np.float32)
        return pad_batch(torch.from_numpy(val), pad_to=self.max_ts)
    def y(self, pid):
        vals = self.df.loc[pid,cols].values.astype(np.float32)
        return vals